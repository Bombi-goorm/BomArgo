apiVersion: apps/v1
kind: Deployment
metadata:
  name: core-server-dep
  labels:
    app: core-server
spec:
  revisionHistoryLimit: 2
  replicas: 1
  selector:
    matchLabels:
      app: core-server
  template:
    metadata:
      labels:
        app: core-server
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: core-server-container
        image: 575108933149.dkr.ecr.ap-northeast-2.amazonaws.com/bombi/core:6
        ports:
        - containerPort: 8181
        env:
        - name: CORE_PORT
          value: "8080"
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: "org.mariadb.jdbc.Driver"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mariadb://bomnet.cbq4a82eqmkx.ap-northeast-2.rds.amazonaws.com:3306/bomnet_db"
        - name: spring.datasource.username
          value: "admin"
          # valueFrom:
          #   secretKeyRef:
          #     name: core-app-config
          #     key: spring.datasource.username
        - name: spring.datasource.password
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: SPRING_DATA_REDIS_HOST
          value: "localhost"
        - name: SPRING_DATA_REDIS_PORT
          value: "6379"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: naver.client.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: naver.client.secret
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: naver.news.api.url
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: api.soil.servicekey
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.project.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.location.type
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.project.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.private.key.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.private.key
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.client.email
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.client.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.auth.uri
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.token.uri
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.auth.provider.x509.cert.url
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.client.x509.cert.url
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.storage.credentials.universe.domain
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.type
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.project.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.private.key.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.private.key
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.client.email
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.client.id
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.auth.uri
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.tokem.uri
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.auth.provider.x509.cert.url
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
        - name: spring.cloud.gcp.bigquery.credentials.client.x509.cert.url
          valueFrom:
            secretKeyRef:
              name: core-app-config
              key: MY_CORE_SECRET_KEY
---
apiVersion: v1
kind: Service
metadata:
  name: core-server-service
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /core/health
spec:
  selector:
    app: core-server
  ports:
    - protocol: TCP
      port: 8181
      targetPort: 8181
